openapi: 3.0.0
info:
  title: API Gateway
  version: 1.0.0
paths:
  /passport/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: User registered successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to register user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passport/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user_id:
                    type: string
                    example: 123e4567-e89b-12d3-a456-426614174000
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid login or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to generate token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passport/me:
    get:
      summary: Get user info
      responses:
        '200':
          description: User info retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update user info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: User updated successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to update user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        login:
          type: string
          example: userlogin
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: password123
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        date_of_birth:
          type: string
          format: date
          example: 1990-01-01
        phone_number:
          type: string
          example: +1234567890
    LoginRequest:
      type: object
      properties:
        login:
          type: string
          example: userlogin
        password:
          type: string
          example: password123
    UserInfo:
      type: object
      properties:
        login:
          type: string
          example: userlogin
        email:
          type: string
          example: user@example.com
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        date_of_birth:
          type: string
          format: date
          example: 1990-01-01
        phone_number:
          type: string
          example: +1234567890
    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        date_of_birth:
          type: string
          format: date
          example: 1990-01-01
        phone_number:
          type: string
          example: +1234567890
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Invalid input
