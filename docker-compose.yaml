services:
  api_gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - PASSPORT_URL=http://passport:8080
      - POSTS_URL=posts:8080
    depends_on:
      - passport
      - posts
  passport:
    build:
      context: .
      dockerfile: passport/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://passport:passport@passport-db:5432/passport
      - JWT_SECRET=secret
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - passport-db
  passport-db:
    image: postgres:17
    ports:
      - "5432:5432"
    volumes:
      - ./passport/db-init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=passport
      - POSTGRES_PASSWORD=passport
      - POSTGRES_DB=passport
    # healthcheck:
    #   test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 3
  posts:
    build:
      context: .
      dockerfile: posts/Dockerfile
    ports:
      - "8084:8080"
    environment:
      - POSTS_PORT=8080
      - DATABASE_URL=postgres://posts:posts@posts-db:5432/posts
      - JWT_SECRET=secret
    depends_on:
      - posts-db
  posts-db:
    image: postgres:17
    volumes:
      - ./posts/db-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=posts
      - POSTGRES_PASSWORD=posts
      - POSTGRES_DB=posts
    # healthcheck:
    #   test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 3
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: /kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server kafka:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - kafka
    entrypoint: [ "sh", "-c",
      "
      echo 'Waiting for Kafka to be ready...';
      while ! nc -z kafka 9092; do sleep 1 && echo WAIT; done;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic user_registrations --partitions 1 --replication-factor 1;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic post_likes --partitions 1 --replication-factor 1;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic post_views --partitions 1 --replication-factor 1;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic post_comments --partitions 1 --replication-factor 1;
      "
    ]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
